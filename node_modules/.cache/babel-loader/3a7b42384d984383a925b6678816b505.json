{"ast":null,"code":"import{swap}from'./helpers';var selectionSort=function selectionSort(array,position,arraySteps,colorSteps){var colorKey=colorSteps[colorSteps.length-1].slice();for(var i=0;i<array.length-1;i++){var min_index=i;for(var j=i+1;j<array.length;j++){if(array[j]<array[min_index]){min_index=j;}colorKey[min_index]=1;colorKey[j]=1;arraySteps.push(array.slice());colorSteps.push(colorKey.slice());colorKey[min_index]=0;colorKey[j]=0;}swap(array,min_index,i);colorKey[i]=2;arraySteps.push(array.slice());colorSteps.push(colorKey.slice());}colorSteps[colorSteps.length-1]=new Array(array.length).fill(2);console.log(array);};export default selectionSort;","map":{"version":3,"sources":["/home/amol_telang/Documents/algoVisuvalizer/algoVisuvalizer/app/src/algorithms/SelectionSort.js"],"names":["swap","selectionSort","array","position","arraySteps","colorSteps","colorKey","length","slice","i","min_index","j","push","Array","fill","console","log"],"mappings":"AAAA,OAASA,IAAT,KAAqB,WAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,QAAR,CAAkBC,UAAlB,CAA8BC,UAA9B,CAA6C,CAClE,GAAIC,CAAAA,QAAQ,CAAGD,UAAU,CAACA,UAAU,CAACE,MAAX,CAAoB,CAArB,CAAV,CAAkCC,KAAlC,EAAf,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGP,KAAK,CAACK,MAAN,CAAe,CAAnC,CAAsCE,CAAC,EAAvC,CAA2C,CAC1C,GAAIC,CAAAA,SAAS,CAAGD,CAAhB,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAGF,CAAC,CAAG,CAAjB,CAAoBE,CAAC,CAAGT,KAAK,CAACK,MAA9B,CAAsCI,CAAC,EAAvC,CAA2C,CAC1C,GAAIT,KAAK,CAACS,CAAD,CAAL,CAAWT,KAAK,CAACQ,SAAD,CAApB,CAAiC,CAChCA,SAAS,CAAGC,CAAZ,CACA,CAEDL,QAAQ,CAACI,SAAD,CAAR,CAAsB,CAAtB,CACAJ,QAAQ,CAACK,CAAD,CAAR,CAAc,CAAd,CACAP,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB,EACAH,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB,EACAF,QAAQ,CAACI,SAAD,CAAR,CAAsB,CAAtB,CACAJ,QAAQ,CAACK,CAAD,CAAR,CAAc,CAAd,CACA,CACDX,IAAI,CAACE,KAAD,CAAQQ,SAAR,CAAmBD,CAAnB,CAAJ,CACMH,QAAQ,CAACG,CAAD,CAAR,CAAc,CAAd,CACNL,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB,EACAH,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB,EACA,CACDH,UAAU,CAACA,UAAU,CAACE,MAAX,CAAoB,CAArB,CAAV,CAAoC,GAAIM,CAAAA,KAAJ,CAAUX,KAAK,CAACK,MAAhB,EAAwBO,IAAxB,CAA6B,CAA7B,CAApC,CACAC,OAAO,CAACC,GAAR,CAAYd,KAAZ,EACA,CAxBD,CA0BA,cAAeD,CAAAA,aAAf","sourcesContent":["import { swap } from './helpers';\n\nconst selectionSort = (array, position, arraySteps, colorSteps) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tlet min_index = i;\n\t\tfor (let j = i + 1; j < array.length; j++) {\n\t\t\tif (array[j] < array[min_index]) {\n\t\t\t\tmin_index = j;\n\t\t\t}\n\n\t\t\tcolorKey[min_index] = 1;\n\t\t\tcolorKey[j] = 1;\n\t\t\tarraySteps.push(array.slice());\n\t\t\tcolorSteps.push(colorKey.slice());\n\t\t\tcolorKey[min_index] = 0;\n\t\t\tcolorKey[j] = 0;\n\t\t}\n\t\tswap(array, min_index, i);\n        colorKey[i] = 2;\n\t\tarraySteps.push(array.slice());\n\t\tcolorSteps.push(colorKey.slice());\n\t}\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n\tconsole.log(array);\n};\n\nexport default selectionSort;"]},"metadata":{},"sourceType":"module"}