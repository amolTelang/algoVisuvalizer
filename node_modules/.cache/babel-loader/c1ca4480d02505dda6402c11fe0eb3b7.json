{"ast":null,"code":"import { swap } from './helpers';\n\nconst selectionSort = (array, position, arraySteps, colorSteps) => {\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n\n  for (let i = 0; i < array.length - 1; i++) {\n    let min_index = i;\n\n    for (let j = i + 1; j < array.length; j++) {\n      if (array[j] < array[min_index]) {\n        min_index = j;\n      }\n\n      colorKey[min_index] = 1;\n      colorKey[j] = 1;\n      arraySteps.push(array.slice());\n      colorSteps.push(colorKey.slice());\n      colorKey[min_index] = 0;\n      colorKey[j] = 0;\n    }\n\n    swap(array, min_index, i);\n    colorKey[i] = 2;\n    arraySteps.push(array.slice());\n    colorSteps.push(colorKey.slice());\n  }\n\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n  console.log(array);\n};\n\nexport default selectionSort;","map":{"version":3,"sources":["/home/amol_telang/Documents/algoVisuvalizer/algoVisuvalizer/app/src/algorithms/SelectionSort.js"],"names":["swap","selectionSort","array","position","arraySteps","colorSteps","colorKey","length","slice","i","min_index","j","push","Array","fill","console","log"],"mappings":"AAAA,SAASA,IAAT,QAAqB,WAArB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,KAA6C;AAClE,MAAIC,QAAQ,GAAGD,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,CAAkCC,KAAlC,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACK,MAAN,GAAe,CAAnC,EAAsCE,CAAC,EAAvC,EAA2C;AAC1C,QAAIC,SAAS,GAAGD,CAAhB;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGT,KAAK,CAACK,MAA9B,EAAsCI,CAAC,EAAvC,EAA2C;AAC1C,UAAIT,KAAK,CAACS,CAAD,CAAL,GAAWT,KAAK,CAACQ,SAAD,CAApB,EAAiC;AAChCA,QAAAA,SAAS,GAAGC,CAAZ;AACA;;AAEDL,MAAAA,QAAQ,CAACI,SAAD,CAAR,GAAsB,CAAtB;AACAJ,MAAAA,QAAQ,CAACK,CAAD,CAAR,GAAc,CAAd;AACAP,MAAAA,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB;AACAH,MAAAA,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB;AACAF,MAAAA,QAAQ,CAACI,SAAD,CAAR,GAAsB,CAAtB;AACAJ,MAAAA,QAAQ,CAACK,CAAD,CAAR,GAAc,CAAd;AACA;;AACDX,IAAAA,IAAI,CAACE,KAAD,EAAQQ,SAAR,EAAmBD,CAAnB,CAAJ;AACMH,IAAAA,QAAQ,CAACG,CAAD,CAAR,GAAc,CAAd;AACNL,IAAAA,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB;AACAH,IAAAA,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB;AACA;;AACDH,EAAAA,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,GAAoC,IAAIM,KAAJ,CAAUX,KAAK,CAACK,MAAhB,EAAwBO,IAAxB,CAA6B,CAA7B,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,CAxBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import { swap } from './helpers';\n\nconst selectionSort = (array, position, arraySteps, colorSteps) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tlet min_index = i;\n\t\tfor (let j = i + 1; j < array.length; j++) {\n\t\t\tif (array[j] < array[min_index]) {\n\t\t\t\tmin_index = j;\n\t\t\t}\n\n\t\t\tcolorKey[min_index] = 1;\n\t\t\tcolorKey[j] = 1;\n\t\t\tarraySteps.push(array.slice());\n\t\t\tcolorSteps.push(colorKey.slice());\n\t\t\tcolorKey[min_index] = 0;\n\t\t\tcolorKey[j] = 0;\n\t\t}\n\t\tswap(array, min_index, i);\n        colorKey[i] = 2;\n\t\tarraySteps.push(array.slice());\n\t\tcolorSteps.push(colorKey.slice());\n\t}\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n\tconsole.log(array);\n};\n\nexport default selectionSort;"]},"metadata":{},"sourceType":"module"}