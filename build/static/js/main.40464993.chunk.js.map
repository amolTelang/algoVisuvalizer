{"version":3,"sources":["components/Bar.js","components/Form.js","algorithms/helpers.js","algorithms/BubbleSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","algorithms/InsertionSort.js","algorithms/SelectionSort.js","styles/RiseUpText/RiseUpText.js","App.js","reportWebVitals.js","index.js"],"names":["Bars","index","length","color","changeArray","useState","len","setLength","useEffect","colors","textStyle","position","top","Math","floor","width","left","background","border","modifiersStyle","Fragment","className","style","transform","backgroundColor","boxShadow","transition","height","type","value","onChange","e","val","target","parseInt","onClick","Form","formLabel","values","labels","currentValue","FormControl","FormLabel","RadioGroup","map","FormControlLabel","control","Radio","label","swap","array","indexA","indexB","temp","insertStep","arrayNew","arraySteps","currentStep","slice","splice","push","bubbleSort","colorSteps","colorKey","i","j","Array","fill","merge","L","R","shift","updateColor","concat","start","end","mergeSort","mid","quickSort","A","B","C","middleValue","sort","indexOf","pickPivot","pivot","key","bigIndex","max","insertionSort","selectionSort","min_index","console","log","riseText","risetext","document","querySelector","enclose","encloseText","from","innerText","split","string","x","join","replace","innerHTML","letters","querySelectorAll","setTimeout","classList","toggle","forEach","letter","setAttribute","App","state","timeouts","barCount","delay","algorithm","ALGORITHMS","BubbleSort","MergeSort","QuickSort","InsertionSort","SelectionSort","setTimeouts","steps","clearTimeouts","timeout","setState","changeAlgorithm","clearColorKey","generateSteps","clearTimeout","blankKey","stepBack","stepForward","generateRandomNumber","min","random","generateBars","arr","changeBarCount","changeSpeed","window","addEventListener","this","playButton","barsDiv","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40464993.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Bar.css';\n\nconst Bars = ({ index, length, color, changeArray }) => {\n\tconst [len, setLength] = useState(length);\n\tuseEffect(() => {\n\t\tsetLength(length);\n\t}, [length]);\n\n\tconst colors = [\n\t\t['rgba(61, 90, 241, 0.5)', 'rgba(61, 90, 241, 0.2)'],\n\t\t['rgba(255, 48, 79, 1)', 'rgba(255, 48, 79, 0.2)'],\n\t\t['rgba(131, 232, 90, 0.5)', 'rgba(131, 232, 90, 0.2)'],\n\t];\n\n\tlet textStyle = {\n\t\tposition: 'relative',\n\t\ttop: Math.floor(length / 2) - 12,\n\t\twidth: length,\n\t\tleft: -Math.floor(length / 2) + 15,\n\t\tbackground: 'transparent',\n\t\tborder: 'none',\n\t};\n\n\tlet modifiersStyle = {\n\t\tposition: 'relative',\n\t\ttop: 225,\n\t};\n\n\tconst handleChange = (e) => {\n\t\tlet val = e.target.value;\n\t\tif (val === '') {\n\t\t\tsetLength(0);\n\t\t\tchangeArray(index, 0);\n\t\t} else {\n\t\t\tval = parseInt(val);\n\t\t\tif (val > 200) {\n\t\t\t\tsetLength(200);\n\t\t\t\tchangeArray(index, 200);\n\t\t\t} else {\n\t\t\t\tsetLength(val);\n\t\t\t\tchangeArray(index, val);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst increment = () => {\n\t\tsetLength(len + 1);\n\t\tchangeArray(index, len + 1);\n\t};\n\n\tconst decrement = () => {\n\t\tsetLength(len - 1);\n\t\tchangeArray(index, len - 1);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className='bar'>\n\t\t\t\t<div className='side top'></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='side bottom'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransform: `translateY(${200 - length}px) rotateX(-90deg)`,\n\t\t\t\t\t\tbackgroundColor: `${colors[color][0]}`,\n\t\t\t\t\t\tboxShadow: `5px 5px 50px 5px ${colors[color][1]}`,\n\t\t\t\t\t\ttransition: `0.3s`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t\t<div className='side right'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='color-bar right-color-bar'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${length}px`,\n\t\t\t\t\t\t\ttransform: `translateY(${200 - length}px)`,\n\t\t\t\t\t\t\tbackgroundColor: `${colors[color][0]}`,\n\t\t\t\t\t\t\tboxShadow: `5px 5px 50px 5px ${colors[color][1]}`,\n\t\t\t\t\t\t\ttransition: `0.3s`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='side left'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='color-bar left-color-bar'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${length}px`,\n\t\t\t\t\t\t\ttransform: `translateY(${200 - length}px)`,\n\t\t\t\t\t\t\tbackgroundColor: `${colors[color][0]}`,\n\t\t\t\t\t\t\tboxShadow: `5px 5px 50px 5px ${colors[color][1]}`,\n\t\t\t\t\t\t\ttransition: `0.3s`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='side front'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='color-bar front-color-bar'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${length}px`,\n\t\t\t\t\t\t\ttransform: `translateY(${200 - length}px)`,\n\t\t\t\t\t\t\tbackgroundColor: `${colors[color][0]}`,\n\t\t\t\t\t\t\tboxShadow: `5px 5px 50px 5px ${colors[color][1]}`,\n\t\t\t\t\t\t\ttransition: `0.3s`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tstyle={textStyle}\n\t\t\t\t\tlength={len}\n\t\t\t\t\tvalue={len}\n\t\t\t\t\tclassName='text'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='side back'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='color-bar back-color-bar'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${length}px`,\n\t\t\t\t\t\t\ttransform: `translateY(${200 - length}px)`,\n\t\t\t\t\t\t\tbackgroundColor: `${colors[color][0]}`,\n\t\t\t\t\t\t\tboxShadow: `5px 5px 50px 5px ${colors[color][1]}`,\n\t\t\t\t\t\t\ttransition: `0.3s`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className='quantity-nav'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='quantity-button quantity-up'\n\t\t\t\t\t\tstyle={modifiersStyle}\n\t\t\t\t\t\tonClick={increment}\n\t\t\t\t\t>\n\t\t\t\t\t\t+\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='quantity-button quantity-down'\n\t\t\t\t\t\tstyle={modifiersStyle}\n\t\t\t\t\t\tonClick={decrement}\n\t\t\t\t\t>\n\t\t\t\t\t\t-\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Bars;","import React from 'react';\nimport {\n\tFormControl,\n\tFormControlLabel,\n\tRadio,\n\tRadioGroup,\n\tFormLabel,\n} from '@material-ui/core';\n\nexport default function Form({\n\tformLabel,\n\tvalues,\n\tlabels,\n\tcurrentValue,\n\tonChange,\n}) {\n\treturn (\n\t\t<div className='card container-small'>\n\t\t\t<FormControl>\n\t\t\t\t<FormLabel>{formLabel}</FormLabel>\n\t\t\t\t<RadioGroup value={currentValue} onChange={onChange}>\n\t\t\t\t\t{values.map((value, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tkey={`${value}_${index}`}\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n                                label={labels[index]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n}","export function swap(array, indexA, indexB) {\n\tlet temp = array[indexA];\n\tarray[indexA] = array[indexB];\n\tarray[indexB] = temp;\n\treturn array;\n}\n\nexport function insertStep(arrayNew, position, arraySteps) {\n\tlet currentStep = arraySteps[arraySteps.length - 1].slice();\n\tcurrentStep.splice(position, arrayNew.length, ...arrayNew);\n\tarraySteps.push(currentStep);\n}","import { swap } from './helpers';\n\nconst bubbleSort = (array, position, arraySteps, colorSteps) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tfor (let j = 0; j < array.length - i - 1; j++) {\n\t\t\tif (array[j] > array[j + 1]) {\n\t\t\t\tarray = swap(array, j, j + 1);\n\t\t\t}\n\t\t\tarraySteps.push(array.slice());\n\t\t\tcolorKey[j] = 1;\n\t\t\tcolorKey[j + 1] = 1;\n\t\t\tcolorSteps.push(colorKey.slice());\n\t\t\tcolorKey[j] = 0;\n\t\t\tcolorKey[j + 1] = 0;\n\t\t}\n\t\tcolorKey[array.length - 1 - i] = 2;\n\t\tarraySteps.push(array.slice());\n\t\tcolorSteps.push(colorKey.slice());\n\t}\n\n\t// Remaining bars become green\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n\treturn;\n};\n\nexport default bubbleSort;","import { insertStep } from './helpers';\n\nconst mergeSort = (array, position, arraySteps, colorSteps) => {\n\tif (array.length === 1) return array;\n\tlet mid = Math.floor(array.length / 2);\n\n\tlet L = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\n\tlet R = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\n\n\tlet arrayNew = merge(L, R, position, arraySteps, colorSteps);\n\tarraySteps.push(arraySteps[arraySteps.length - 1].slice());\n\tcolorSteps.push(\n\t\tcolorSteps[colorSteps.length - 1]\n\t\t\t.slice()\n\t\t\t.fill(arrayNew.length === arraySteps[0].length ? 2 : 0)\n\t);\n\treturn arrayNew;\n};\n\nconst merge = (L, R, position, arraySteps, colorSteps) => {\n\tlet arrayNew = [];\n\tlet A = 0;\n\tlet B = 0;\n\n\twhile (L.length > 0 && R.length > 0) {\n\t\tif (L[A] < R[B]) {\n\t\t\tarrayNew.push(L.shift());\n\t\t\tinsertStep(arrayNew, position, arraySteps);\n\t\t} else {\n\t\t\tarrayNew.push(R.shift());\n\t\t\tinsertStep(arrayNew, position, arraySteps);\n\t\t}\n\t\tupdateColor(position, colorSteps, arrayNew.length - 1, [], []);\n\t}\n\n\n\tif (L.length !== 0 || R.length !== 0) {\n\t\tupdateColor(position, colorSteps, arrayNew.length, L, R);\n\t\tarrayNew = arrayNew.concat(L);\n\t\tarrayNew = arrayNew.concat(R);\n\t\tinsertStep(arrayNew, position, arraySteps);\n\t}\n\n\treturn arrayNew;\n};\n\nconst updateColor = (position, colorSteps, start, L, R) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\tlet end = position + start + L.length + R.length;\n\tstart = start + position;\n\n\tif (end === start) {\n\t\tcolorKey.fill(1, start, end + 1);\n\t} else {\n\t\tcolorKey.fill(0, start, end);\n\t}\n\tcolorSteps.push(colorKey);\n};\n\nexport default mergeSort;","import { swap, insertStep } from './helpers';\n\nconst quickSort = (array, position, arraySteps, colorSteps) => {\n  if (array.length < 2) {\n    insertStep(array, position, arraySteps);\n\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\n    colorKey[position] = 2;\n    colorSteps.push(colorKey);\n    return;\n  }\n\n  // pick median of three numbers as pivot and sent it to back\n  swap(array, pickPivot(array), array.length - 1);\n  insertStep(array, position, arraySteps);\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\n\n  let pivot = array[array.length - 1];\n  let A = 0;\n  let B = array.length - 1;\n\n  // swap small value from right with big value from left\n  while (A < B) {\n    while (array[A] < pivot) {\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n      A++;\n    }\n    while (array[B] >= pivot) {\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n      B--;\n    }\n    if (A < B) {\n      swap(array, A, B);\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n    }\n  }\n\n  // swap big value with pivot\n  let bigIndex = Math.max(A, B);\n\n  swap(array, bigIndex, array.length - 1);\n  insertStep(array, position, arraySteps);\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n  colorKey[position + bigIndex] = 2;\n  colorSteps.push(colorKey);\n\n  // recurse on two halves\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\n\n  return;\n}\n\nfunction pickPivot(array) {\n  let A = array[0];\n  let B = array[Math.floor(array.length / 2)];\n  let C = array[array.length - 1];\n\n  let middleValue = [A, B, C].sort()[1];\n  let middleIndex = array.indexOf(middleValue);\n\n  return middleIndex;\n}\n\nexport default quickSort;","const insertionSort = (array, position, arraySteps, colorSteps) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\n\tlet i, j, key;\n\tfor (i = 1; i < array.length; i++) {\n\t\tkey = array[i];\n\t\tj = i - 1;\n\n\t\twhile (j >= 0 && array[j] > key) {\n\t\t\tarray[j + 1] = array[j];\n\t\t\tarraySteps.push(array.slice());\n\t\t\tcolorKey[i] = 2;\n            if ( i === j + 1 ){\n                colorKey[j + 1] = 2;\n            } else{\n                colorKey[j + 1] = 1;\n            }\n\t\t\tcolorKey[j] = 1;\n\t\t\tcolorSteps.push(colorKey.slice());\n            colorKey[j + 1] = 0;\n            colorKey[i] = 0;\n\t\t\tcolorKey[j] = 0;\n\t\t\tj = j - 1;\n\t\t}\n\t\tarray[j + 1] = key;\n\t\tarraySteps.push(array.slice());\n\t\tcolorSteps.push(colorKey.slice());\n\t}\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n};\n\nexport default insertionSort","import { swap } from './helpers';\n\nconst selectionSort = (array, position, arraySteps, colorSteps) => {\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\n\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tlet min_index = i;\n\t\tfor (let j = i + 1; j < array.length; j++) {\n\t\t\tif (array[j] < array[min_index]) {\n\t\t\t\tmin_index = j;\n\t\t\t}\n\n\t\t\tcolorKey[min_index] = 1;\n\t\t\tcolorKey[j] = 1;\n\t\t\tarraySteps.push(array.slice());\n\t\t\tcolorSteps.push(colorKey.slice());\n\t\t\tcolorKey[min_index] = 0;\n\t\t\tcolorKey[j] = 0;\n\t\t}\n\t\tswap(array, min_index, i);\n        colorKey[i] = 2;\n\t\tarraySteps.push(array.slice());\n\t\tcolorSteps.push(colorKey.slice());\n\t}\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n\tconsole.log(array);\n};\n\nexport default selectionSort;","export const riseText = (e) => {\n\tconst risetext = document.querySelector('.risetext');\n\tconsole.log(risetext);\n\tconst enclose = document.querySelector('.page-header_title-main');\n\tconsole.log(enclose);\n\tconst encloseText = Array.from(enclose.innerText.split(''));\n\tconsole.log(encloseText);\n\tlet string = encloseText\n\t\t.map((x) => {\n\t\t\tif (x === ' ') {\n\t\t\t\treturn `<span class=\"letter\">&nbsp;</span></span><span class=\"word\">`;\n\t\t\t} else {\n\t\t\t\treturn `<span class=\"letter\">${x}</span>`;\n\t\t\t}\n\t\t})\n\t\t.join('');\n\n\tconsole.log(string);\n\n\tstring = string.replace(\n\t\t'<span class=\"letter\"> </span>',\n\t\t'<span class=\"letter\">&nbsp;</span>'\n\t);\n\tenclose.innerHTML = `<span class=\"word\">${string}</span>`;\n\n\tconst letters = Array.from(document.querySelectorAll('.letter'));\n\n\tfunction timeout() {\n\t\tsetTimeout(function () {\n\t\t\trisetext.classList.toggle('show');\n\t\t\t//timeout();\n\t\t}, 500);\n\t}\n\n\ttimeout();\n\n\tletters.forEach(function (letter, i) {\n\t\tconst style = `transition-delay: ${50 * i}ms;`;\n\t\tletter.setAttribute('style', `${style}`);\n\t});\n};","import React, { Component } from 'react';\nimport Bar from './components/Bar';\nimport Form from './components/Form';\n\n// Algorithms\nimport BubbleSort from './algorithms/BubbleSort';\nimport MergeSort from './algorithms/MergeSort';\nimport QuickSort from './algorithms/QuickSort';\nimport InsertionSort from './algorithms/InsertionSort';\nimport SelectionSort from './algorithms/SelectionSort';\n\n// Icons\nimport Play from '@material-ui/icons/PlayCircleOutlineRounded';\nimport Forward from '@material-ui/icons/SkipNextRounded';\nimport Backward from '@material-ui/icons/SkipPreviousRounded';\nimport RotateLeft from '@material-ui/icons/RotateLeft';\n\n// Styles\nimport './styles/RiseUpText/RiseUpText.css';\nimport { riseText } from './styles/RiseUpText/RiseUpText';\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tarray: [],\n\t\tarraySteps: [],\n\t\tcolorKey: [],\n\t\tcolorSteps: [],\n\t\ttimeouts: [],\n\t\tcurrentStep: 0,\n\t\tbarCount: 10,\n\t\tdelay: 100,\n\t\talgorithm: 'Bubble Sort',\n\t};\n\n\tALGORITHMS = {\n\t\t'Bubble Sort': BubbleSort,\n\t\t'Merge Sort': MergeSort,\n\t\t'Quick Sort': QuickSort,\n\t\t'Insertion Sort': InsertionSort,\n\t\t'Selection Sort': SelectionSort,\n\t};\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('load', riseText);\n\t\tthis.generateBars();\n\t}\n\n\tsetTimeouts = () => {\n\t\tlet steps = this.state.arraySteps;\n\t\tlet colorSteps = this.state.colorSteps;\n\n\t\tthis.clearTimeouts();\n\t\tlet timeouts = [];\n\n\t\tlet i = 0;\n\n\t\twhile (i < steps.length - this.state.currentStep) {\n\t\t\tlet timeout = setTimeout(() => {\n\t\t\t\tlet currentStep = this.state.currentStep;\n\t\t\t\tthis.setState({\n\t\t\t\t\tarray: steps[currentStep],\n\t\t\t\t\tcolorKey: colorSteps[currentStep],\n\t\t\t\t\tcurrentStep: currentStep + 1,\n\t\t\t\t});\n\t\t\t\ttimeouts.push(timeout);\n\t\t\t}, this.state.delay * i);\n\t\t\ti++;\n\t\t}\n\n\t\tthis.setState({\n\t\t\ttimeouts: timeouts,\n\t\t});\n\t};\n\n\tchangeAlgorithm = (e) => {\n\t\tthis.clearTimeouts();\n\t\tthis.clearColorKey();\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\talgorithm: e.target.value,\n\t\t\t\tcurrentStep: 0,\n\t\t\t\tarraySteps: [\n\t\t\t\t\tthis.state.arraySteps[\n\t\t\t\t\t\tthis.state.currentStep === 0 ? 0 : this.state.currentStep - 1\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t},\n\t\t\t() => this.generateSteps()\n\t\t);\n\t};\n\n\tclearTimeouts = () => {\n\t\tthis.state.timeouts.forEach((timeout) => clearTimeout(timeout));\n\t\tthis.setState({ timeouts: [] });\n\t};\n\n\tclearColorKey = () => {\n\t\tlet blankKey = new Array(this.state.barCount).fill(0);\n\t\tthis.setState({ colorKey: blankKey, colorSteps: [blankKey] });\n\t};\n\n\tstepBack = () => {\n\t\tlet currentStep = this.state.currentStep;\n\n\t\tif (currentStep === 0) return;\n\t\tthis.clearTimeouts();\n\t\tcurrentStep -= 1;\n\t\tthis.setState({\n\t\t\tarray: this.state.arraySteps[currentStep],\n\t\t\tcolorKey: this.state.colorSteps[currentStep],\n\t\t\tcurrentStep: currentStep,\n\t\t})\n\t};\n\n\tstepForward = () => {\n\t\tlet currentStep = this.state.currentStep;\n\n\t\tif (currentStep >= this.state.arraySteps.length - 1) return;\n\t\tthis.clearTimeouts();\n\t\tcurrentStep += 1;\n\t\tthis.setState({\n\t\t\tarray: this.state.arraySteps[currentStep],\n\t\t\tcolorKey: this.state.colorSteps[currentStep],\n\t\t\tcurrentStep: currentStep,\n\t\t})\n\t};\n\n\tgenerateSteps = () => {\n\t\tlet array = this.state.array.slice();\n\t\tlet steps = this.state.arraySteps.slice();\n\t\tlet colorSteps = this.state.colorSteps.slice();\n\n\t\tthis.ALGORITHMS[this.state.algorithm](array, 0, steps, colorSteps);\n\n\t\tthis.setState({\n\t\t\tarraySteps: steps,\n\t\t\tcolorSteps: colorSteps,\n\t\t});\n\t};\n\n\tgenerateRandomNumber = (min, max) => {\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\t};\n\n\tgenerateBars = () => {\n\t\tthis.clearTimeouts();\n\t\tthis.clearColorKey();\n\n\t\tlet barCount = this.state.barCount;\n\t\tlet arr = [];\n\n\t\tfor (let i = 0; i < barCount; i++) {\n\t\t\tarr.push(this.generateRandomNumber(50, 200));\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tarray: arr,\n\t\t\t\tarraySteps: [arr],\n\t\t\t\tbarCount: barCount,\n\t\t\t\tcurrentStep: 0,\n\t\t\t},\n\t\t\t() => this.generateSteps()\n\t\t);\n\t};\n\n\tchangeArray = (index, value) => {\n\t\tlet array = this.state.array;\n\t\tarray[index] = value;\n\t\tconsole.log(array);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tarray: array,\n\t\t\t\tarraySteps: [array],\n\t\t\t\tcurrentStep: 0,\n\t\t\t},\n\t\t\t() => this.generateSteps()\n\t\t);\n\t};\n\n\tchangeBarCount = (e) => {\n\t\tthis.clearTimeouts();\n\t\tthis.clearColorKey();\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tbarCount: parseInt(e.target.value),\n\t\t\t},\n\t\t\t() => this.generateBars()\n\t\t);\n\t};\n\n\tchangeSpeed = (e) => {\n\t\tthis.clearTimeouts();\n\t\tthis.setState({\n\t\t\tdelay: parseInt(e.target.value),\n\t\t});\n\t};\n\n\trender() {\n\t\tlet barsDiv = this.state.array.map((value, index) => (\n\t\t\t<Bar\n\t\t\t\tkey={index}\n\t\t\t\tindex={index}\n\t\t\t\tlength={value}\n\t\t\t\tcolor={this.state.colorKey[index]}\n\t\t\t\tchangeArray={this.changeArray}\n\t\t\t/>\n\t\t));\n\t\tlet playButton;\n\n\t\tif (this.state.arraySteps.length === this.state.currentStep) {\n\t\t\tplayButton = (\n\t\t\t\t<button className='controller' onClick={this.generateBars}>\n\t\t\t\t\t<RotateLeft />\n\t\t\t\t</button>\n\t\t\t);\n\t\t} else {\n\t\t\tplayButton = (\n\t\t\t\t<button className='controller' onClick={this.setTimeouts}>\n\t\t\t\t\t<Play />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<h1 className='page-header_title risetext'>\n\t\t\t\t\t<span className='page-header_title-main enclose'>\n\t\t\t\t\t\tSorting Visualizer\n\t\t\t\t\t</span>\n\t\t\t\t</h1>\n\t\t\t\t\n\t\t\t\t<div className='frame'>\n\t\t\t\t\t<div className='barsDiv container card'>{barsDiv}</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className='control-pannel'>\n\t\t\t\t\t<div className='control-buttons'>\n\t\t\t\t\t\t<button className='controller' onClick={this.stepBack}>\n\t\t\t\t\t\t\t<Backward />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{playButton}\n\t\t\t\t\t\t<button className='controller' onClick={this.stepForward}>\n\t\t\t\t\t\t\t<Forward />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className='pannel'>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tformLabel='Algorithms'\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\t'Bubble Sort',\n\t\t\t\t\t\t\t'Merge Sort',\n\t\t\t\t\t\t\t'Quick Sort',\n\t\t\t\t\t\t\t'Insertion Sort',\n\t\t\t\t\t\t\t'Selection Sort',\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tlabels={[\n\t\t\t\t\t\t\t'Bubble Sort',\n\t\t\t\t\t\t\t'Merge Sort',\n\t\t\t\t\t\t\t'Quick Sort',\n\t\t\t\t\t\t\t'Insertion Sort',\n\t\t\t\t\t\t\t'Selection Sort',\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tcurrentValue={this.state.algorithm}\n\t\t\t\t\t\tonChange={this.changeAlgorithm}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tformLabel='Items'\n\t\t\t\t\t\tvalues={[10, 15, 20, 25, 30]}\n\t\t\t\t\t\tlabels={[10, 15, 20, 25, 30]}\n\t\t\t\t\t\tcurrentValue={this.state.barCount}\n\t\t\t\t\t\tonChange={this.changeBarCount}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tformLabel='Speed'\n\t\t\t\t\t\tvalues={[500, 400, 300, 200, 100]}\n\t\t\t\t\t\tlabels={['1x', '2x', '3x', '4x', '5x']}\n\t\t\t\t\t\tcurrentValue={this.state.delay}\n\t\t\t\t\t\tonChange={this.changeSpeed}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}